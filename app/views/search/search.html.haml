.row
  %br
.row
  .col.col-lg-2
  .col.col-lg-8
    %section.panel
      %header.panel-heading
        %form
          .input-group.text-small
            %input.input-small{:placeholder => "Search Repositories", :type => "text", name: "q", value: params[:q], autocapitalize: :off, autocomplete: :off, spellcheck: false}/
            .input-group-btn
              %button.btn.btn-small.btn-white Search
            
      - unless @searched
        .text-center.text-large
          %i.icon-search
          Search Github's Repositories
      - else
        - if @results.empty?
          .text-center.text-large
            %i.icon-search
            = "We couldn't find any repositories matching '#{params[:q]}'"
            - unless ["", "any"].include? params[:l]
              .input-group.text-center
                .input-group-btn
                  %button.btn.btn-small.btn-white.pull-right.dropdown-toggle{"data-toggle" => "dropdown", :type => "button"}
                    = "Language: #{params[:l]}"
                    %span.caret
                  %ul.dropdown-menu.pull-right.text-right
                    %li
                      %a{href: url_for(params.merge(l: :any))} 
                        - if params[:l] == "any" || params[:l].blank?
                          %i.icon-check-sign
                        Any
                    - language_list.each do |language|
                      %li
                        %a{href: url_for(params.merge(l: language))}
                          - if params[:l] == language
                            %i.icon-check-sign
                          = language
        - else
          %header.panel-heading
            .input-group.text-small
              .h4= "We've found #{@response.total_count} repository results"
              .input-group-btn
                %button.btn.btn-small.btn-white.dropdown-toggle{"data-toggle" => "dropdown", :type => "button"}
                  = "Language: #{(params[:l]=="any" || params[:l].blank?) ? "Any" : params[:l]}"
                  %span.caret
                %ul.dropdown-menu.pull-right.text-right
                  %li
                    %a{href: url_for(params.merge(l: :any))} 
                      - if params[:l] == "any" || params[:l].blank?
                        %i.icon-check-sign
                      Any
                  - language_list.each do |language|
                    %li
                      %a{href: url_for(params.merge(l: language))}
                        - if params[:l] == language
                          %i.icon-check-sign
                        = language

              - sort_by = params[:s]=="stars" ? (params[:o]=="asc" ? "Fewest stars" : "Most stars") : "Best match"
              .input-group-btn
                %button.btn.btn-small.btn-white.dropdown-toggle{"data-toggle" => "dropdown", :type => "button"}
                  = "Sort: #{sort_by}"
                  %span.caret
                %ul.dropdown-menu.pull-right.text-right
                  %li
                    %a{href: url_for(params.merge(o: :desc, s: :match))}
                      - unless params[:s]=="stars"
                        %i.icon-check-sign
                      Best match
                  %li
                    %a{href: url_for(params.merge(o: :desc, s: :stars))} 
                      - if params[:s]=="stars" && params[:o]!="asc"
                        %i.icon-check-sign
                      Most stars
                  %li
                    %a{href: url_for(params.merge(o: :asc, s: :stars))} 
                      - if params[:s]=="stars" && params[:o]=="asc"
                        %i.icon-check-sign
                      Fewest stars
          %ul.list-group.list-group-flush.m-t-n
            - @results.each do |result|
              %li.list-group-item
                .media
                  .pull-right.text-grey.m-t-small
                    .pull-left
                      = result.language
                    %i.icon-star.text-success= result.stargazers_count
                  .media-body
                    %div
                      %a.h4{:href => result.html_url, target: "_blank"}= result.full_name
                    - unless result.description.blank?
                      %small.text-muted= result.description
                      %br
                    %small.text-info= "Updated #{time_ago_in_words(result.updated_at)} ago"
            %footer.panel-footer
              .row
                .col.col-lg-12.text-center.text-center-sm
                  = will_paginate @results, renderer: BootstrapPagination::Rails

  .col.col-lg-2